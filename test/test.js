const assert = require('assert');
const Packet = require('../packet');

describe('node-dns', function(){
  
  var query = new Buffer([ 
    0x29 ,0x64 ,0x01 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00,
    0x00 ,0x00 ,0x00 ,0x00 ,0x03 ,0x77 ,0x77 ,0x77,
    0x01 ,0x7a ,0x02 ,0x63 ,0x6e ,0x00 ,0x00 ,0x01,
    0x00 ,0x01 ]);
  
  var response = new Buffer([ 
    0x29, 0x64, 0x81, 0x80, 0x00, 0x01, 0x00, 0x01, 
    0x00, 0x00, 0x00, 0x00, 0x03, 0x77, 0x77, 0x77, 
    0x01, 0x7a, 0x02, 0x63, 0x6e, 0x00, 0x00, 0x01, 
    0x00, 0x01, 0xc0, 0x0c, 0x00, 0x01, 0x00, 0x01, 
    0x00, 0x00, 0x01, 0x90, 0x00, 0x04, 0x36, 0xde, 
    0x3c, 0xfc ]);
  
  it('parse dns query packet', function(){
    
    var request = Packet.parse(query);
    var packet = new Packet({
      header: {
        id: 0x2964,
        opcode: 0,
        qr: 0,
        ra: 0,
        aa: 0,
        rcode: 0,
        rd: 0,
        tc: 0,
        z: 0,
      },
      question: [
        {
          name: 'www.z.cn.',
          class: 1,
          type: 1
        }
      ]
    });
  
    assert.deepEqual(packet, request);
    
  });
  
  
  it('packet to buffer', function(){
    
    var request = Packet.parse(query);
    assert.deepEqual(query, request.toBuffer());
    
  });
  
});